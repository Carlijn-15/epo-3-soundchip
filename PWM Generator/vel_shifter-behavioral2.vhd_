library IEEE;
use IEEE.std_logic_1164.ALL;
use ieee.numeric_std.all;
use IEEE.STD_LOGIC_unsigned.ALL;

architecture behavioral2 of vel_shifter is
begin

	process (A1_Out, amp, vel) is
	begin
		case vel is
			when "1100000" | "1100001" | "1100010" | "1100011" | "1100100" | "1100101" | "1100110" | "1100111" | "1101000" | "1101001" | "1101010" | "1101011" | "1101100" | "1101101" | "1101110" | "1101111" | "1111000" | "1111001" | "1111010" | "1111011" | "1111100" | "1111101" | "1111110" | "1111111" | "1110100" | "1110101" | "1110110" | "1110111" | "1110000" | "1110001" | "1110010" | "1110011" =>

			S_Out <= A1_Out & "000000";

			when "1000000" | "1000001" | "1000010" | "1000011" | "1000100" | "1000101" | "1000110" | "1000111" | "1001000" | "1001001" | "1001010" | "1001011" | "1001100" | "1001101" | "1001110" | "1001111" | "1011000" | "1011001" | "1011010" | "1011011" | "1011100" | "1011101" | "1011110" | "1011111" | "1010100" | "1010101" | "1010110" | "1010111" | "1010000" | "1010001" | "1010010" | "1010011" =>

			S_Out <= "0" & amp & "000000";

			when "0110000" | "0110001" | "0110010" | "0110011" | "0110100" | "0110101" | "0110110" | "0110111" | "0111000" | "0111001" | "0111010" | "0111011" | "0111100" | "0111101" | "0111110" | "0111111" =>

			S_Out <= "0" & A1_Out & "00000";

			when "0100000" | "0100001" | "0100010" | "0100011" | "0100100" | "0100101" | "0100110" | "0100111" | "0101000" | "0101001" | "0101010" | "0101011" | "0101100" | "0101101" | "0101110" | "0101111" =>
			
			S_Out <= "00" & amp & "00000";

			when "0011000" | "0011001" | "0011010" | "0011011" | "0011100" | "0011101" | "0011110" | "0011111" =>
				
			S_Out <= "00" & A1_Out & "0000";

			when "0010000" | "0010001" | "0010010" | "0010011" | "0010100" | "0010101" | "0010110" | "0010111" =>

			S_Out <= "000" & amp & "0000";

			when "0001100" | "0001101" | "0001110" | "0001111" =>

				

			when "0001000" | "0001001" | "0001010" | "0001011" =>

				

			when "0000110" | "0000111" =>

				

			when "0000100" | "0000101" =>

				

			when "0000011" =>
				


			when "0000010" =>
				


			when "0000001" =>
				
			S_Out <= "0000000" & amp;

			when others =>

			S_Out <= "0000000000000";
	
		end case;


	end process;

end behavioral2;



